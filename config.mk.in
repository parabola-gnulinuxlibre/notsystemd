#  -*- Mode: makefile; indent-tabs-mode: t -*-
#
#  This file is part of systemd.
#
#  Copyright 2010-2012 Lennart Poettering
#  Copyright 2010-2012 Kay Sievers
#  Copyright 2013 Zbigniew JÄ™drzejewski-Szmek
#  Copyright 2013 David Strauss
#  Copyright 2016 Luke Shumaker
#
#  systemd is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation; either version 2.1 of the License, or
#  (at your option) any later version.
#
#  systemd is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with systemd; If not, see <http://www.gnu.org/licenses/>.

ifeq ($(topsrcdir),)
MAKEFLAGS += --no-builtin-rules --no-builtin-variables --warn-undefined-variables
topoutdir := $(patsubst %/,%,$(dir $(lastword $(MAKEFILE_LIST))))
abs_topsrcdir := @abs_top_srcdir@
topsrcdir = $(if $(am_path),$(call am_path,$(abs_topsrcdir)),$(abs_topsrcdir))

# Dirs of external packages
dbuspolicydir=@dbuspolicydir@
dbussessionservicedir=@dbussessionservicedir@
dbussystemservicedir=@dbussystemservicedir@
pamlibdir=@pamlibdir@
pamconfdir=@pamconfdir@
pkgconfigdatadir=$(datadir)/pkgconfig
pkgconfiglibdir=$(libdir)/pkgconfig
polkitpolicydir=$(datadir)/polkit-1/actions
bashcompletiondir=@bashcompletiondir@
zshcompletiondir=@zshcompletiondir@
rpmmacrosdir=$(prefix)/lib/rpm/macros.d
sysvinitdir=$(SYSTEM_SYSVINIT_PATH)
sysvrcnddir=$(SYSTEM_SYSVRCND_PATH)
varlogdir=$(localstatedir)/log
systemdstatedir=$(localstatedir)/lib/systemd
catalogstatedir=$(systemdstatedir)/catalog
xinitrcdir=$(sysconfdir)/X11/xinit/xinitrc.d

# Our own, non-special dirs
pkgsysconfdir=$(sysconfdir)/systemd
userunitdir=$(prefix)/lib/systemd/user
userpresetdir=$(prefix)/lib/systemd/user-preset
tmpfilesdir=$(prefix)/lib/tmpfiles.d
sysusersdir=$(prefix)/lib/sysusers.d
sysctldir=$(prefix)/lib/sysctl.d
binfmtdir=$(prefix)/lib/binfmt.d
modulesloaddir=$(prefix)/lib/modules-load.d
networkdir=$(rootprefix)/lib/systemd/network
pkgincludedir=$(includedir)/systemd
systemgeneratordir=$(rootlibexecdir)/system-generators
usergeneratordir=$(prefix)/lib/systemd/user-generators
systemshutdowndir=$(rootlibexecdir)/system-shutdown
systemsleepdir=$(rootlibexecdir)/system-sleep
systemunitdir=$(rootprefix)/lib/systemd/system
systempresetdir=$(rootprefix)/lib/systemd/system-preset
udevlibexecdir=$(rootprefix)/lib/udev
udevhomedir=$(udevlibexecdir)
udevrulesdir=$(udevlibexecdir)/rules.d
udevhwdbdir=$(udevlibexecdir)/hwdb.d
catalogdir=$(prefix)/lib/systemd/catalog
kernelinstalldir = $(prefix)/lib/kernel/install.d
factory_etcdir = $(datadir)/factory/etc
factory_pamdir = $(datadir)/factory/etc/pam.d
bootlibdir = $(prefix)/lib/systemd/boot/efi

# And these are the special ones for /
rootprefix=@rootprefix@
rootbindir=$(rootprefix)/bin
rootlibexecdir=$(rootprefix)/lib/systemd

# Libraries we depend on
libbasic.CPPFLAGS      = -I$(topsrcdir)/src/libbasic -I$(topoutdir)/src/libbasic
libbasic.DEPENDS       = $(topoutdir)/src/libbasic/libbasic.la
libshared.CPPFLAGS     = -I$(topsrcdir)/src/libshared -I$(topoutdir)/src/libshared
libshared.DEPENDS      = $(topoutdir)/src/libshared/libshared.la
libfirewall.CPPFLAGS   = -I$(topsrcdir)/src/libfirewall -I$(topoutdir)/src/libfirewall
libfirewall.DEPENDS    = $(topoutdir)/src/libfirewall/libfirewall.la
libsystemd.CPPFLAGS    = -I$(topsrcdir)/src/libsystemd/include -I$(topoutdir)/src/libsystemd/include
libsystemd.DEPENDS     = $(topoutdir)/src/libsystemd/src/libsystemd.la
libacl.CPPFLAGS        = 
libacl.DEPENDS         = @ACL_LIBS@
libapparmor.CPPFLAGS   = $(shell $(PKG_CONFIG) --cflags libapparmor)
libapparmor.DEPENDS    = $(shell $(PKG_CONFIG) --libs   libapparmor)
libaudit.CPPFLAGS      = 
libaudit.DEPENDS       = @AUDIT_LIBS@
libblkid.CPPFLAGS      = $(shell $(PKG_CONFIG) --cflags blkid)
libblkid.DEPENDS       = $(shell $(PKG_CONFIG) --libs   blkid)
libcap.CPPFLAGS        =
libcap.DEPENDS         = @CAP_LIBS@
libcryptsetup.CPPFLAGS = $(shell $(PKG_CONFIG) --cflags libcryptsetup)
libcryptsetup.DEPENDS  = $(shell $(PKG_CONFIG) --libs   libcryptsetup)
libcurl.CPPFLAGS       = $(shell $(PKG_CONFIG) --cflags libcurl)
libcurl.DEPENDS        = $(shell $(PKG_CONFIG) --libs   libcurl)
libdbus.CPPFLAGS       = $(shell $(PKG_CONFIG) --cflags dbus-1)
libdbus.DEPENDS        = $(shell $(PKG_CONFIG) --libs   dbus-1)
libelfutils.CPPFLAGS   = 
libelfutils.DEPENDS    = @ELFUTILS_LIBS@
libgcrypt.CPPFLAGS     = $(LIBGCRYPT_CFLAGS) $(GPG_ERROR_CFLAGS)
libgcrypt.DEPENDS      = $(LIBGCRYPT_LIBS) $(GPG_ERROR_LIBS)
libgnutls.CPPFLAGS     = $(shell $(PKG_CONFIG) --cflags gnutls)
libgnutls.DEPENDS      = $(shell $(PKG_CONFIG) --libs   gnutls)
libidn.CPPFLAGS        = $(shell $(PKG_CONFIG) --cflags libidn)
libidn.DEPENDS         = $(shell $(PKG_CONFIG) --libs   libidn)
libiptc.CPPFLAGS       = $(shell $(PKG_CONFIG) --cflags libiptc)
libiptc.DEPENDS        = $(shell $(PKG_CONFIG) --libs   libiptc)
libkmod.CPPFLAGS       = $(shell $(PKG_CONFIG) --cflags libkmod)
libkmod.DEPENDS        = $(shell $(PKG_CONFIG) --libs   libkmod)
liblz4.CPPFLAGS        = $(shell $(PKG_CONFIG) --cflags liblz4)
liblz4.DEPENDS         = $(shell $(PKG_CONFIG) --libs   liblz4)
libmicrohttpd.CPPFLAGS = $(shell $(PKG_CONFIG) --cflags libmicrohttpd)
libmicrohttpd.DEPENDS  = $(shell $(PKG_CONFIG) --libs   libmicrohttpd)
libmount.CPPFLAGS      = $(shell $(PKG_CONFIG) --cflags mount)
libmount.DEPENDS       = $(shell $(PKG_CONFIG) --libs   mount)
libpam.CPPFLAGS        = 
libpam.DEPENDS         = @PAM_LIBS@
libqrencode.CPPFLAGS   = $(shell $(PKG_CONFIG) --cflags libqrencode)
libqrencode.DEPENDS    = $(shell $(PKG_CONFIG) --libs   libqrencode)
libseccomp.CPPFLAGS    = $(shell $(PKG_CONFIG) --cflags libseccomp)
libseccomp.DEPENDS     = $(shell $(PKG_CONFIG) --libs   libseccomp)
libselinux.CPPFLAGS    = $(shell $(PKG_CONFIG) --cflags libselinux)
libselinux.DEPENDS     = $(shell $(PKG_CONFIG) --libs   libselinux)
libxkbcommon.CPPFLAGS  = $(shell $(PKG_CONFIG) --cflags xkbcommon)
libxkbcommon.DEPENDS   = $(shell $(PKG_CONFIG) --libs   xkbcommon)
libxz.CPPFLAGS         = $(shell $(PKG_CONFIG) --cflags liblzma)
libxz.DEPENDS          = $(shell $(PKG_CONFIG) --libs   liblzma)
libz.CPPFLAGS          = $(shell $(PKG_CONFIG) --cflags zlib)
libz.DEPENDS           = $(shell $(PKG_CONFIG) --libs   zlib)

AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@

AR = gcc-ar
ACLOCAL = ${SHELL} /home/luke/src/3rd-party/systemd/build-aux/missing aclocal-1.15
AUTOCONF = ${SHELL} /home/luke/src/3rd-party/systemd/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/luke/src/3rd-party/systemd/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/luke/src/3rd-party/systemd/build-aux/missing automake-1.15
AWK = gawk
CC = gcc
CPP = gcc -E
EGREP = /usr/bin/grep -E
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
GPERF = gperf
GMSGFMT = /usr/bin/msgfmt
KBD_LOADKEYS = /usr/bin/loadkeys
KBD_SETFONT = /usr/bin/setfont
KEXEC = /usr/sbin/kexec
KILL = /usr/bin/kill
KMOD = /usr/bin/kmod
KMOD_CFLAGS = 
KMOD_LIBS = -lkmod
LD = /usr/bin/ld -m elf_x86_64
LIBTOOL = $(SHELL) $(topoutdir)/libtool
M4 = /usr/bin/m4
MAKEINFO = ${SHELL} /home/luke/src/3rd-party/systemd/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NM = gcc-nm
OBJCOPY = objcopy
OBJDUMP = objdump
PKG_CONFIG = /usr/bin/pkg-config
PYTHON = /usr/bin/python
QEMU = /usr/bin/qemu-system-x86_64
QUOTACHECK = /usr/bin/quotacheck
QUOTAON = /usr/bin/quotaon
RANLIB = gcc-ranlib
SED = /usr/bin/sed
SETCAP = /usr/bin/setcap
SHELL = /bin/sh
STRINGS = strings
STRIP = strip
SULOGIN = /usr/bin/sulogin
SUSHELL = /bin/sh
UMOUNT_PATH = /usr/bin/umount
XSLTPROC = /usr/bin/xsltproc

CFLAGS = -g -O2
CPPFLAGS = 
LDFLAGS = 

GZIP_ENV = --best
DIST_ARCHIVES = $(distdir).tar.xz
DIST_TARGETS = dist-xz
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
AMTAR = $${TAR-tar}
CCDEPMODE = depmode=gcc3
CERTIFICATEROOT = /etc/ssl
DEBUGTTY = /dev/tty9
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DNS_SERVERS = 8.8.8.8 8.8.4.4 2001:4860:4860::8888 2001:4860:4860::8844
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EFI_ARCH = x86_64
EFI_CC = gcc
EFI_INC_DIR = /usr/include
EFI_LDS_DIR = /usr/lib
EFI_LIB_DIR = /usr/lib
EFI_MACHINE_TYPE_NAME = x64
EXEEXT = 
GETTEXT_PACKAGE = systemd
LIBOBJS = 
LIBS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
M4_DEFINES =  -DHAVE_SECCOMP -DHAVE_PAM -DHAVE_ACL -DHAVE_SMACK -DHAVE_MICROHTTPD -DHAVE_LIBCURL -DHAVE_LIBIDN -DHAVE_LIBIPTC -DENABLE_TIMESYNCD -DENABLE_COREDUMP -DENABLE_RESOLVED -DENABLE_NETWORKD -DENABLE_KDBUS
MAINT = 
NMEDIT = 
NTP_SERVERS = 0.arch.pool.ntp.org 1.arch.pool.ntp.org 2.arch.pool.ntp.org 3.arch.pool.ntp.org
OBJEXT = o
OTOOL = 
OTOOL64 = 
OUR_CFLAGS =  -pipe -Wall -Wextra -Wundef -Wformat=2 -Wformat-security -Wformat-nonliteral -Wlogical-op -Wmissing-include-dirs -Wold-style-definition -Wpointer-arith -Winit-self -Wdeclaration-after-statement -Wfloat-equal -Wsuggest-attribute=noreturn -Werror=missing-prototypes -Werror=implicit-function-declaration -Werror=missing-declarations -Werror=return-type -Wstrict-prototypes -Wredundant-decls -Wmissing-noreturn -Wshadow -Wendif-labels -Wstrict-aliasing=2 -Wwrite-strings -Wno-unused-parameter -Wno-missing-field-initializers -Wno-unused-result -Wno-format-signedness -Werror=overflow -Wdate-time -Wnested-externs -ffast-math -fno-common -fdiagnostics-show-option -fno-strict-aliasing -fvisibility=hidden -fstack-protector -fstack-protector-strong -fPIE --param=ssp-buffer-size=4 -Werror=shadow -flto -ffunction-sections -fdata-sections  
OUR_CPPFLAGS =  -Wp,-D_FORTIFY_SOURCE=2  
OUR_LDFLAGS =  -Wl,--gc-sections -Wl,--as-needed -Wl,--no-undefined -Wl,-z,relro -Wl,-z,now -pie -Wl,-fuse-ld=gold  
PACKAGE = systemd
PACKAGE_BUGREPORT = http://github.com/systemd/systemd/issues
PACKAGE_NAME = systemd
PACKAGE_STRING = systemd 229
PACKAGE_TARNAME = systemd
PACKAGE_URL = http://www.freedesktop.org/wiki/Software/systemd
PACKAGE_VERSION = 229
PATH_SEPARATOR = :
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /home/luke/.prefix/lib/pkgconfig
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 3.5
QEMU_BIOS = 
RC_LOCAL_SCRIPT_PATH_START = /etc/rc.local
RC_LOCAL_SCRIPT_PATH_STOP = /usr/sbin/halt.local
SET_MAKE = 
SYSTEM_GID_MAX = 999
SYSTEM_SYSVINIT_PATH = 
SYSTEM_SYSVRCND_PATH = 
SYSTEM_UID_MAX = 999
TELINIT = /lib/sysvinit/telinit
TTY_GID = 5
USE_NLS = yes
VERSION = 229
XGETTEXT = /usr/bin/xgettext

ac_ct_AR = gcc-ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
ac_ct_NM = gcc-nm
ac_ct_RANLIB = gcc-ranlib
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -

build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown

endif
